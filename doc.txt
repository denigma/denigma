Setting up Denigma
==================

In order to set up Denigma locally just do the following.

1. Git in:
Go to the GIT bootcamp: https://github.com/

2. Fork Denigma:
git clone https://github.com/hevok/denigma

3. Start Denigma:
cd denigma
denigma/manage.py syncdb
denigma/manage.py runserver

4. Change Denigma:
git commit -am "Brief description of the change."
git push origin master


Deploying Denigma
=================

To deploy Denigma in the Clouds the Amazone Web Service (AWS) is used.

1. Launch an Ubuntu AMI:
Preferable a maverick build such as the ami-975a6de3 (called Giter; which ships a GIT repository) or the ami-fd7b4089 (called Daily which is up-to-date and does not require updating/upgrading).
Set up of Giter takes approximately 7 minutes and the Daily takes 3 minutes due to the already installed updates.

2. ssh into the machine with the DNS and keypairs aquired from the Amazone Control Center (use bash ami.sh). On the machine:
sudo su
cd ..
aptitude install git # Only on Daily, not necessary on Giter. 
git clone http://github.com/hevok/denigma
bash denigma/configure.sh


Developmental Notes
===================

Serve Media for the Admin Interface
-----------------------------------

1. Add the following line to the Apache config file (/etc/apache2/http.conf):
Alias /django/contrib/admin/media/ /home/denigma/env/lib/python2.6/site-packages/django/contrib/admin/media/

2. Set in the settings.py:
ADMIN_MEDIA_PREFIX = '/django/contrib/admin/media/'


'bool' object has no attribute 'status code'
--------------------------------------------

It appears that the pinax.middleware.security.HideSensitiveFieldsMiddleware in the MIDDLEWARE_CLASSES of the settings.py is causing an error which propagates and makes debuging nearly impossible [http://comments.gmane.org/gmane.comp.python.django.pinax.devel/104].

Deactivating it by commenting out abrogates this problem. Consider to inlcude it with an if statement only in debuging mode.


Missing Markup
--------------

In the wiki view.html the load markup tag raised an error. Including the "django.conrib.markup" in the settings.py fixed it [http://stackoverflow.com/questions/6399649/django-markup-templatetags-error].


CSRF Problem
------------
Submit forms such as those in the Wiki edit and search need to be tagged with a {% csrf_token %}.
This worked fine for the edit form [http://jordanmessina.com/2010/05/24/django-1-2-csrf-verification-failed/]. However it failed on the search form. Deactivating by commenting out the django.middleware.csrf.CsrfViewMiddleware in the MIDDLEWARE_CLASSES resolved this problem, but is only a suboptimal solution. Adding a RequestContext handler to the render_to_response in the search view which was already present in the edit view resolved this issue [http://stackoverflow.com/questions/3197321/csrf-error-in-django].
